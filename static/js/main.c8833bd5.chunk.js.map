{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","list","item","itemResult","FeedbackOptions","options","onLeaveFeedback","map","option","button","type","value","onClick","Section","title","children","section","defaultProps","Notification","message","App","state","e","target","console","log","setState","prevState","countTotalFeedback","Object","values","this","countPositiveFeedbackPercentage","Math","round","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,WAAa,wD,iBCA/FD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,OAAS,kC,gBCAhED,EAAOC,QAAU,CAAC,QAAU,gC,+LCYbC,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAIC,UAAWC,IAAOC,KAAtB,UACE,qBAAIF,UAAWC,IAAOE,KAAtB,mBAAmCR,KACnC,qBAAIK,UAAWC,IAAOE,KAAtB,sBAAsCP,KACtC,qBAAII,UAAWC,IAAOE,KAAtB,kBAAkCN,KAClC,qBAAIG,UAAWC,IAAOG,WAAtB,oBAA0CN,KAC1C,qBAAIE,UAAWC,IAAOG,WAAtB,gCAAsDL,EAAtD,W,gBCIWM,EAVS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKP,UAAU,OAAf,SACGM,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBAAQT,UAAWC,IAAOS,OAAQC,KAAK,SAAsBC,MAAOH,EAAQI,QAASN,EAArF,SACGE,GADkDA,S,gBCFrDK,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAAShB,UAAWC,IAAOgB,QAA3B,UACGF,GAAS,oBAAIf,UAAWC,IAAOc,MAAtB,SAA8BA,IAEvCC,MAILF,EAAQI,aAAe,CACrBH,MAAO,GACPC,SAAU,IAQGF,Q,iBClBTK,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,oBAAGpB,UAAWC,IAAOmB,QAArB,UAA+BA,EAA/B,QAEtCD,EAAaD,aAAe,CAC1BE,QAAS,IAOID,QCPTE,E,4MACJC,MAAQ,CACN3B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EA+BPU,gBAAkB,SAAAgB,GAChB,IAAMX,EAAQW,EAAEC,OAAOZ,MACvBa,QAAQC,IAAIH,EAAEC,QAEd,EAAKG,UAAS,SAAAC,GACZ,OAAO,eACJhB,EAAQgB,EAAUhB,GAAS,O,4CAKlC,WAGE,IAFA,IAAIiB,EAAqB,EAEzB,MADoBC,OAAOC,OAAOC,KAAKV,OACvC,eAAoC,CAClCO,GADiB,KAInB,IAAII,EACJA,EAAkCJ,EAAqBK,KAAKC,MAAOH,KAAKV,MAAM3B,KAAOkC,EAAsB,KAAO,EAElH,IAAMvB,EAAUwB,OAAOM,KAAKJ,KAAKV,OAEjC,OACE,sBAAKtB,UAAU,MAAf,UACE,cAAC,EAAD,CAASe,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBT,QAASA,EAASC,gBAAiByB,KAAKzB,oBAG3D,cAAC,EAAD,CAASQ,MAAM,aAAf,SACGc,EACC,cAAC,EAAD,CACElC,KAAMqC,KAAKV,MAAM3B,KACjBC,QAASoC,KAAKV,MAAM1B,QACpBC,IAAKmC,KAAKV,MAAMzB,IAChBC,MAAO+B,EACP9B,mBAAoBkC,IAGtB,cAAC,EAAD,CAAcb,QAAQ,+B,GA1EhBiB,aAkFHhB,ICpFfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c8833bd5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3pLwf\",\"item\":\"Statistics_item__1Igr8\",\"itemResult\":\"Statistics_itemResult__3Bw94 Statistics_item__1Igr8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__AbCA7\",\"title\":\"Section_title__1BBH8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"FeedbackOptions_wrap__2pjYY\",\"button\":\"FeedbackOptions_button__1xSmW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3kwNP\"};","import React from 'react'\nimport styles from '../Statistics/Statistics.module.css'\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul className={styles.list}>\n    <li className={styles.item}>Good: {good}</li>\n    <li className={styles.item}>Neutral: {neutral}</li>\n    <li className={styles.item}>Bad: {bad}</li>\n    <li className={styles.itemResult}>Total: {total}</li>\n    <li className={styles.itemResult}>Positive feedback: {positivePercentage}%</li>\n  </ul>\n)\n\nexport default Statistics\n","import React from 'react'\nimport styles from '../FeedbackOptions/FeedbackOptions.module.css'\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <div className=\"wrap\">\n    {options.map(option => (\n      <button className={styles.button} type=\"button\" key={option} value={option} onClick={onLeaveFeedback}>\n        {option}\n      </button>\n    ))}\n  </div>\n)\n\nexport default FeedbackOptions\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from '../Section/Section.module.css'\n\nconst Section = ({ title, children }) => (\n  <section className={styles.section}>\n    {title && <h2 className={styles.title}>{title}</h2>}\n\n    {children}\n  </section>\n)\n\nSection.defaultProps = {\n  title: '',\n  children: [],\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n}\n\nexport default Section\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from '../Notification/Notification.module.css'\n\nconst Notification = ({ message }) => <p className={styles.message}>{message} </p>\n\nNotification.defaultProps = {\n  message: '',\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n}\n\nexport default Notification\n","import React, { Component } from 'react'\nimport './App.css'\nimport PropTypes from 'prop-types'\nimport Statistics from './components/Statistics'\nimport FeedbackOptions from './components/FeedbackOptions'\nimport Section from './components/Section'\nimport Notification from './components/Notification'\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  }\n\n  static propTypes = {\n    good: PropTypes.number,\n  }\n\n  // goodIncrement = () => {\n  //   this.setState(prevState => {\n  //     return {\n  //       good: prevState.good + 1,\n  //     }\n  //   })\n  // }\n\n  // neutralIncrement = () => {\n  //   this.setState(prevState => {\n  //     return {\n  //       neutral: prevState.neutral + 1,\n  //     }\n  //   })\n  // }\n\n  // badIncrement = () => {\n  //   this.setState(prevState => {\n  //     return {\n  //       bad: prevState.bad + 1,\n  //     }\n  //   })\n  // }\n\n  onLeaveFeedback = e => {\n    const value = e.target.value\n    console.log(e.target)\n\n    this.setState(prevState => {\n      return {\n        [value]: prevState[value] + 1,\n      }\n    })\n  }\n\n  render() {\n    let countTotalFeedback = 0\n    const feedbackArr = Object.values(this.state)\n    for (const feedback of feedbackArr) {\n      countTotalFeedback += feedback\n    }\n\n    let countPositiveFeedbackPercentage = 0\n    countPositiveFeedbackPercentage = countTotalFeedback ? Math.round((this.state.good / countTotalFeedback) * 100) : 0\n\n    const options = Object.keys(this.state)\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={options} onLeaveFeedback={this.onLeaveFeedback} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {countTotalFeedback ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={countTotalFeedback}\n              positivePercentage={countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}